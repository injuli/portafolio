{"ast":null,"code":"import { Vector, getDistances, isPointInside } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n  constructor(container) {\n    this.container = container;\n    this.modes = [\"destroy\"];\n  }\n  update(particle, direction, _delta, outMode) {\n    if (!this.modes.includes(outMode)) {\n      return;\n    }\n    const container = this.container;\n    switch (particle.outType) {\n      case \"normal\":\n      case \"outside\":\n        if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n          return;\n        }\n        break;\n      case \"inside\":\n        {\n          const {\n            dx,\n            dy\n          } = getDistances(particle.position, particle.moveCenter);\n          const {\n            x: vx,\n            y: vy\n          } = particle.velocity;\n          if (vx < 0 && dx > particle.moveCenter.radius || vy < 0 && dy > particle.moveCenter.radius || vx >= 0 && dx < -particle.moveCenter.radius || vy >= 0 && dy < -particle.moveCenter.radius) {\n            return;\n          }\n          break;\n        }\n    }\n    container.particles.remove(particle, undefined, true);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}