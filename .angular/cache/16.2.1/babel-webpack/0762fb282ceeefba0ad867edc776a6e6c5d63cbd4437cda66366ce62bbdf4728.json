{"ast":null,"code":"import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n  constructor(x, y, radius) {\n    super(x, y);\n    this.radius = radius;\n  }\n  contains(point) {\n    return getDistance(point, this.position) <= this.radius;\n  }\n  intersects(range) {\n    const pos1 = this.position,\n      pos2 = range.position,\n      distPos = {\n        x: Math.abs(pos2.x - pos1.x),\n        y: Math.abs(pos2.y - pos1.y)\n      },\n      r = this.radius;\n    if (range instanceof Circle) {\n      const rSum = r + range.radius,\n        dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n      return rSum > dist;\n    } else if (range instanceof Rectangle) {\n      const {\n          width,\n          height\n        } = range.size,\n        edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n      return edges <= r ** 2 || distPos.x <= r + width && distPos.y <= r + height || distPos.x <= width || distPos.y <= height;\n    }\n    return false;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}