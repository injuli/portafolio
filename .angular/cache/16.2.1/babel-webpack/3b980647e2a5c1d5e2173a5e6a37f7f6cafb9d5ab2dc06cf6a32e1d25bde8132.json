{"ast":null,"code":"import _asyncToGenerator from \"D:/Ingrid/Documentos/portafolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport class FrameManager {\n  constructor(container) {\n    this.container = container;\n  }\n  nextFrame(timestamp) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      try {\n        const container = _this.container;\n        if (container.lastFrameTime !== undefined && timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n          container.draw(false);\n          return;\n        }\n        (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : container.lastFrameTime = timestamp;\n        const deltaValue = timestamp - container.lastFrameTime,\n          delta = {\n            value: deltaValue,\n            factor: 60 * deltaValue / 1000\n          };\n        container.lifeTime += delta.value;\n        container.lastFrameTime = timestamp;\n        if (deltaValue > 1000) {\n          container.draw(false);\n          return;\n        }\n        yield container.particles.draw(delta);\n        if (container.duration > 0 && container.lifeTime > container.duration) {\n          container.destroy();\n          return;\n        }\n        if (container.getAnimationStatus()) {\n          container.draw(false);\n        }\n      } catch (e) {\n        console.error(\"tsParticles error in animation loop\", e);\n      }\n    })();\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}