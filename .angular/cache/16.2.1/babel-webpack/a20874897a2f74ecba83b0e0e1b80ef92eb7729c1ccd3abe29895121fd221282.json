{"ast":null,"code":"import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n  constructor() {\n    this.onClick = new ClickEvent();\n    this.onDiv = new DivEvent();\n    this.onHover = new HoverEvent();\n    this.resize = new ResizeEvent();\n  }\n  get onclick() {\n    return this.onClick;\n  }\n  set onclick(value) {\n    this.onClick = value;\n  }\n  get ondiv() {\n    return this.onDiv;\n  }\n  set ondiv(value) {\n    this.onDiv = value;\n  }\n  get onhover() {\n    return this.onHover;\n  }\n  set onhover(value) {\n    this.onHover = value;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    this.onClick.load(data.onClick ?? data.onclick);\n    const onDiv = data.onDiv ?? data.ondiv;\n    if (onDiv !== undefined) {\n      this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n        const tmp = new DivEvent();\n        tmp.load(t);\n        return tmp;\n      });\n    }\n    this.onHover.load(data.onHover ?? data.onhover);\n    if (isBoolean(data.resize)) {\n      this.resize.enable = data.resize;\n    } else {\n      this.resize.load(data.resize);\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}