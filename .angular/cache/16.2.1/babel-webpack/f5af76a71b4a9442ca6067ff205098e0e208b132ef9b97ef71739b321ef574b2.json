{"ast":null,"code":"import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n  draw(context, particle, radius) {\n    if (!particle.circleRange) {\n      particle.circleRange = {\n        min: 0,\n        max: Math.PI * 2\n      };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n  }\n  getSidesCount() {\n    return 12;\n  }\n  particleInit(container, particle) {\n    const shapeData = particle.shapeData,\n      angle = shapeData?.angle ?? {\n        max: 360,\n        min: 0\n      };\n    particle.circleRange = !isObject(angle) ? {\n      min: 0,\n      max: angle * Math.PI / 180\n    } : {\n      min: angle.min * Math.PI / 180,\n      max: angle.max * Math.PI / 180\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}